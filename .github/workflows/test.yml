
name: Python application

on:
  push:
    branches: [ master ]
    tags: ['*']
  pull_request:
    branches: [ master ]
  release:
    types: [published]
    
    
jobs:
  smoke_test:
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest        
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r tests/requirements-test.txt
        sudo apt install -y libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0

    - name: Smoke tests
      env:
        QT_DEBUG_PLUGINS: 1
        DISPLAY: ':99.0'
      run: |         
        ulimit -c unlimited
        sudo catchsegv xvfb-run --auto-servernum `which python` -m pytest tests
         
         
  normal_test:
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
        platform: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    needs: [smoke_test]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r tests/requirements-test.txt

    - name: Install dependencies (Linux)
      if: ${{ runner.os == 'Linux' }}      
      run: |
        sudo apt install -y libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0

    - name: Regular test (Linux)
      if: ${{ runner.os == 'Linux' }}      
      env:
        DISPLAY: ':99.0'
      run: |         
        ulimit -c unlimited
        sudo catchsegv xvfb-run --auto-servernum `which python` -m pytest tests/

    - name: Regular test (Windows)
      if: ${{ runner.os == 'Windows' }}      
      env:
        QT_DEBUG_PLUGINS: 1
      run: |         
        pytest tests/

  make_and_upload_package:
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"

    runs-on: ubuntu-latest
    needs: [normal_test]
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Make wheel package
      run: |         
        pip install wheel
        
        # first call would generate VERSION file
        PYTHONPATH=. python pytripgui/main.py --version
        
        python setup.py bdist_wheel
        # makes source package
        python setup.py sdist
        
    - name: Publish packages to pypi
      uses: pypa/gh-action-pypi-publish@v1.6.4
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      with:
        # Password for your PyPI user or an access token
        password: ${{ secrets.PYPI_TOKEN }}
        # The repository URL to use
        repository_url: "https://upload.pypi.org/legacy/"
        # The target directory for distribution
        packages_dir: dist/
        # Show verbose output.
        verbose: true   
