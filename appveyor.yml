# validation page for appveyor config: https://ci.appveyor.com/tools/validate-yaml

# latest image with newer windows and python
image: Visual Studio 2019

# we are not building Visual Studio project, so default build step is off
build: off

environment:
  matrix:
     - platform: x64
       PYTHON: "C:\\Python38-x64"

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  # Prepend Python to the PATH of this build
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
# update pip
  - python -m pip install --upgrade pip
# check versions
  - python -V
  - pip -V
  - python -m pip -V
  - pip list
# check 32 or 64 bit
  - python -c "import struct;print(8 * struct.calcsize('P'))"
# install usual requirements
  - python -m pip install --upgrade setuptools
  - python -m pip install --upgrade -r requirements.txt
  - pip list
# check numpy version
  - python -c "import numpy as np;print(np.version.version)"

build_script:
# py to exe package
# install pyinstaller
  - python -m pip install pyinstaller
# newer pydicom doesn't work
  - python -m pip install "pydicom==2.1.2"
# check python packages list and theirs version
  - pip list
# generate installer
  - python setup.py -V # trick needed to generate VERSION file
  - pyinstaller main.spec
# remove dist-info folders
  - ps: Remove-Item dist\pytripgui\*.dist-info -Recurse
# compress pytripgui package
  - 7z a pytripgui.zip ./dist/pytripgui

# installer
# generate single dir installation
# add InnoSetup to PATH
  - set PATH="C:\Program Files (x86)\Inno Setup 6";%PATH%
# make windows installer
  - iscc win_innosetup.iss

# make wheel package
  - python -m pip install wheel
  - pip list
  - python setup.py bdist_wheel
# clean build directory
  - rd /s /q build

test_script:
# testing
# install needed dependencies
  - python -m pip install --upgrade -r tests\\requirements-test.txt
  - pip list
# remove source directory, to be sure that we use only wheel package for testing
  - rd /s /q pytripgui
  - del setup.py
# install wheel package via pip, as we do not know the wheel filename in advance, we loop over all *.whl files in dist directory
  - ps: Get-ChildItem -Path dist\ -Recurse -Include *.whl | foreach-object { echo $_ | Out-Host ; python -m pip install $_}
# run tests
  - pytest

# upload artifacts
artifacts:
  - path: 'dist\*whl'
    name: wheel
  - path: 'Output\pytrip*exe'
    name: installer
  - path: 'pytripgui.zip'
    name: package

# push artifacts to github
deploy:
  description: 'AppveyorCI build'
  provider: GitHub
  auth_token:
    secure: PK+PK8/w2Emruyqi9bLVDfHGNmbT5Lq+hArBCb9JG1S4V2F9mlTTdMfzTweLlXL3  # github auth token valid until 13.08.2022
  artifact: installer
  draft: false
  prerelease: false
  force_update: true
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only
