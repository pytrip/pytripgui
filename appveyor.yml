
# validation page for appveyor config: https://ci.appveyor.com/tools/validate-yaml

# we are not building Visual Studio project, so default build step is off
build: off

environment:
  matrix:
#    - platform: x64
#      PYTHON: "C:\\Python35-x64"

#     - platform: x64
#       PYTHON: "C:\\Python36-x64"

#     - platform: x64
#       PYTHON: "C:\\Python37-x64"

     - platform: x64
       PYTHON: "C:\\Python38-x64"

init:
# check python version
  - python -V
# check 32 or 64 bit
  - python -c "import struct;print(8 * struct.calcsize('P'))"


install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  # Prepend Python to the PATH of this build
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
# check pip version
  - pip -V
# install usual requirements
  - pip install "setuptools>=30.0.0"  # minimal version of setuptools required to build package without error
  - pip install --upgrade -r requirements.txt
  - pip install --upgrade -r tests\\requirements-test.txt
# check numpy version
  - python -c "import numpy as np;print(np.version.version)"
# check python and pip versions
  - python -V
  - pip -V

test_script:
# make wheel package
  - pip install wheel
  - python setup.py bdist_wheel
# clean build directory
  - rd /s /q build

# installer
# generate single dir installation
# Installing InnoSetup
  - choco install -y curl InnoSetup
  - set PATH="C:\Program Files (x86)\Inno Setup 5";%PATH%
# upx is needed by pyinstaller to compress files
  - curl -L -o upx.zip https://github.com/upx/upx/releases/download/v3.96/upx-3.96-win64.zip
  - 7z e upx.zip *.exe -r
# pyinstaller
  - pip install pyinstaller
# install missing dependencies
  - pip install appdirs tornado packaging
# generate installer
  - python setup.py -V # trick needed to generate VERSION file
  - pyinstaller main.spec
  - iscc win10_innosetup.iss

# testing
# remove source directory, to be sure that we use only wheel package for testing
  - rd /s /q pytripgui
  - del setup.py
# install wheel package via pip, as we do not know the wheel filename in advance, we loop over all *.whl files in dist directory
  - ps: Get-ChildItem -Path dist\ -Recurse -Include *.whl | foreach-object { echo $_ | Out-Host ; pip install $_}
# run tests
  - pytest

# upload artifacts
artifacts:
  - path: 'dist\*whl'
    name: wheel
  - path: 'Output\pytrip*exe'
    name: installer

# push artifacts to github
deploy:
  description: 'AppveyorCI build'
  provider: GitHub
  auth_token:
    secure: p+WOiBJJTkzczNSfry0A4Jmf63P61UbnuMgM/i2Y+TvkVNkjc9cFjQs8UEEdy9J/
  artifact: installer
  draft: false
  prerelease: false
  force_update: true
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only
