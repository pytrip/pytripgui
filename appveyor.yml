
# validation page for appveyor config: https://ci.appveyor.com/tools/validate-yaml

# we are not building Visual Studio project, so default build step is off
build: off

environment:
  matrix:
    - platform: x86
      PYTHON: "C:\\Python35"

    - platform: x64
      PYTHON: "C:\\Python35-x64"

    - platform: x86
      PYTHON: "C:\\Python36"

    - platform: x64
      PYTHON: "C:\\Python36-x64"


init:
# add Python interpreter to PATH variable
  - set PATH=%PYTHON%;%PYTHON%\scripts;%PATH%
# following this one: https://github.com/audreyr/cookiecutter/issues/599
  - "git config --system http.sslcainfo \"C:\\Program Files\\Git\\mingw64\\ssl\\certs\\ca-bundle.crt\""
# check python version
  - python -V
# check 32 or 64 bit
  - python -c "import struct;print(8 * struct.calcsize('P'))"


install:
# check pip version and upgrade it
  - python -m pip -V
  - pip -V
# install usual requirements
  - pip install --upgrade -r requirements.txt
# check numpy version
  - python -c "import numpy as np;print(np.version.version)"
# check python and pip versions
  - python -V
  - pip -V
# check 32 or 64 bit
  - python -c "import struct;print(8 * struct.calcsize('P'))"
# generate qt5 files
  - makeui.batchmo

before_test:
  - python %PYTHON%\\scripts\\versioneer install

test_script:
# make wheel package
  - pip install wheel
  - python setup.py bdist_wheel
# clean build directory
  - rd /s /q build
# install generated package
  - cd dist
  - python -c "import os; import pip; pip.main(['install', os.listdir('.')[0]]);"
  - cd ..
# install optional deps
  - python -m pip install matplotlib
# pytrip98 installation (optional)
  - python -m pip install pytrip98
  # Installing InnoSetup
  - choco install -y curl InnoSetup
  - set PATH="C:\Program Files (x86)\Inno Setup 5";%PATH%
# upx is needed by pyinstaller to compress files
  - curl -L -o upx.zip https://github.com/upx/upx/releases/download/v3.93/upx393w.zip
  - 7z e upx.zip *.exe -r
# pyinstaller
  - pip install pyinstaller
# install missing dependencies
  - pip install appdirs tornado packaging
#
# generate single dir installation
  - pyinstaller main.spec
# generate installer
  - iscc win10_innosetup.iss
# make wheel package
  - python setup.py bdist_wheel
# clean build directory
  - rd /s /q build
# install generated package
  - cd dist
  - python -c "import os; import pip; pip.main(['install', os.listdir('.')[0]]);"
  - cd ..

# upload artifacts
artifacts:
  - path: 'dist\*whl'
    name: wheel
  - path: 'Output\pytrip*exe'
    name: installer

# push artifacts to github
deploy:
  description: 'AppveyorCI build'
  provider: GitHub
  auth_token:
    secure: p+WOiBJJTkzczNSfry0A4Jmf63P61UbnuMgM/i2Y+TvkVNkjc9cFjQs8UEEdy9J/
  artifact: installer
  draft: false
  prerelease: false
  force_update: true
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only